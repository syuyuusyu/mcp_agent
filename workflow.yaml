principle: |
      在回答问题时,每次都返回如下固定格式的json:
      {
          "status": "success|error", // ok表示当前节点处理成功,error表示当前节点处理失败
          "title": "当前节点的英文代号", // 对应mermaid图中的节点id,如果当前prompt中没有流程图,则模型自行决定或使用'Answer'
          "description": "当前节点的中文描述", //对应mermaid图中的节点描述,如果当前prompt中没有流程图,则模型自行决定或使用'--'
          "action": "show_info|user_input|execute_promission|execute_tool|done", 
          "content": "描述当操作需要做什么", 
      }
      上面json中的action 和 content 字段由模型根据当前节点的逻辑生成，下面是对于每种情况的描述
      对于action=user_input,表示需要向用户获取信息,content 描述需要用户输入什么;
      对于action=execute_tool,表示需要执行function_call, content简单描述下执行的命令是做什么的;
      对于action=execte_promission,表示在一些情况下,询问用户是否需要执行当前命令或脚本,content询问用户是否需要执行当前命令或脚本;
      对于action=show_info,将当前流程的状态告知用户,这个时候通常有以下几种情况:
        1结果展示型:前一个节点做了一些复杂的操作或查询,需要将操作的结果汇总展示给用户;
        2确认准备型:后续节点需要用户确认一些信息,所以需要将当前状态汇总告知用户;
        3状态通知型:流程进度更新、中间状态说明、处理状态通知等;
        4错误恢复型:部分失败后的状态说明、重试前的情况说明等;
        5分支选择型:多路径分支的选择说明、条件判断结果的展示等;
        6总结汇报型:批量操作的统计结果、最终确认前的汇总等;
        如果需要展示的信息比较复杂,可以使用markdown格式;
      对于action=done,表示当前流程结束,content简单描述下为什么结束;
      如果当前prompt中没有流程图,则action=done留给用户判断,用户可以随时结束当前流程;
      
      重要规则: 如果当前出流程多次出现错误,包括调用function_call失败,或者模型一直返回无法继续推进流程的结果,则直接返回action=done,并在content中描述当前流程失败的原因
      
      重要规则：当 action==execute_tool时,不要在choices[0].delta.content 中返回 function_call 的信息，而是返回在 choices[0].delta.function_call 中
      请将所以的信息都放在上述的json中返回,而不是直接返回自然语言的描述   
  
topics:
  - code: excel_test
    name: execl
    prompt: |
      当前流程用于测试模型处理excel表格的能力。
      在当前程序上下文中有一个excel_mcp程序，程序的具体API会在具体调用的时候告诉你。
      当前文件系统中有一个现成的excel文件，文件名为 昭市中3月支付宝异常.xlsx, 该文件有2个sheet,每个sheet中有多个订单号。
      请在读取该文件后，编写一个excel公式用来比对两个sheet中的订单号是否一致，并将结果输出到一个新的sheet中。
      再将公式写入到文件中后，保存文件，并告诉用户文件的下载路径 http://localhost:8002/workflow/download/{file_name}      